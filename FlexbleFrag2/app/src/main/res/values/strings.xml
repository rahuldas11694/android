<resources>
    <string name="app_name">FlexbleFrag2</string>
    <string-array name="chapters">

        <item>Activity</item>
        <item>Intents</item>
        <item>services</item>
        <item>content provider</item>

    </string-array>

    <string-array name="description">
        <item>Activity is a Java code that supports a screen or UI. In other words, building block of the user interface is the activity.
Activity class is a pre-defined class in Android and every application which has UI must inherit it to create window.
Let us create a simple application which displays current time when you just tap the window. We will dissect the code to understand how the activity works.</item>
        <item>accepted
An Intent is an "intention" to perform an action; in other words,
            a messaging object you can use to request an action from another app component
An Intent is basically a message to say you did or want something to happen. Depending on the
            intent, apps or the OS might be listening for it and will react accordingly. Think of it as a blast email
            to a bunch of friends, in which you tell your friend John to do something, or to friends who can do X ("intent filters"),
            to do X. The other folks will ignore the email, but John (or friends who can do X) will react to it.</item>
        <item>
            A Service is an application component that can perform long-running operations in the background,
            and it does not provide a user interface. Another application component can start a service, and it
            continues to run in the background even if the user switches to another application. Additionally, a component can
            bind to a service to interact with it and even perform interprocess communication (IPC).
        </item>
        <item>A content provider manages access to a central repository of data. A provider is
            part of an Android application, which often provides its own UI for working with the data.
            However, content providers are primarily intended to be used by other applications, which access
            the provider using a provider client object.</item>

    </string-array>
</resources>
